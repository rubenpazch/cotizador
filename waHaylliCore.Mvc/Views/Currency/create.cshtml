@model waHaylliCore.EntityModel.Currencies.ViewModels.CurrencyEditViewModel


@{
    ViewBag.Title = "Create Currency";
}
<h2>Customer</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Create a new customer by entering the customer name, country, and region.</h4>
    <hr />
    <div class="form-group">
        @Html.LabelFor(model => model.currencyId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.currencyId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.currencyId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.shortName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.shortName, new { htmlAttributes = new { @class = "form-control", @autofocus = "autofocus" } })
            @Html.ValidationMessageFor(model => model.shortName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.largeName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.largeName, new { htmlAttributes = new { @class = "form-control", @autofocus = "autofocus" } })
            @Html.ValidationMessageFor(model => model.largeName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.country, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.country, new { htmlAttributes = new { @class = "form-control", @autofocus = "autofocus" } })
            @Html.ValidationMessageFor(model => model.country, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
            $('#Country').change(function () {
                var selectedCountry = $("#Country").val();
                var regionsSelect = $('#Region');
                regionsSelect.empty();
                if (selectedCountry != null && selectedCountry != '') {
                    $.getJSON('@Url.Action("GetRegions")', { iso3: selectedCountry }, function (regions) {
                        if (regions != null && !jQuery.isEmptyObject(regions))
                        {
                            regionsSelect.append($('<option/>', {
                                value: null,
                                text: ""
                            }));
                            $.each(regions, function (index, region) {
                                regionsSelect.append($('<option/>', {
                                    value: region.Value,
                                    text: region.Text
                                }));
                            });
                        };
                    });
                }
            });
    </script>
}
